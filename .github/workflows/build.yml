name: Build Executables

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: checkout  # Ensure this job runs after the checkout job
    strategy:
      matrix:
        include:
          - os: windows-2022
            build-type: 'windows'
          - os: ubuntu-22.04
            build_type: 'linux'
          - os: ubuntu-22.04-arm
            build_type: 'linux-arm64'
          - os: macos-13
            build_type: 'macos'
          - os: ubuntu-22.04
            build_type: alpine-static
          - os: ubuntu-22.04-arm
            build_type: alpine-static-arm64
    steps:
      - name: Install dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install -y cmake g++ libasound2-dev

      - name: Install dependencies (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: lukka/get-cmake@latest

      - name: Build static ALSA library
        if: matrix.build_type == 'alpine-static' || matrix.build_type == 'alpine-static-arm64'
        run: |
          docker run -v $(pwd):/workspace -w /workspace alpine:latest sh -c "
            apk add --no-cache build-base wget autoconf automake libtool && \
            wget https://www.alsa-project.org/files/pub/lib/alsa-lib-1.2.9.tar.bz2 && \
            tar -xjf alsa-lib-1.2.9.tar.bz2 && \
            cd alsa-lib-1.2.9 && \
            ./configure --enable-static --disable-shared && \
            make -j$(nproc) && \
            make install
          "

      - name: Run Alpine Docker Container
        if: matrix.build_type == 'alpine-static' || matrix.build_type == 'alpine-static-arm64'
        run: |
          docker run -v $(pwd):/workspace -w /workspace alpine:latest sh -c "
            if [ ! -f /workspace/CMakeLists.txt ]; then
              echo 'CMakeLists.txt not found in /workspace. Please check the mount configuration.'
              exit 1
            fi && cd /workspace && \
            apk add --no-cache git cmake make g++ musl-dev linux-headers alsa-lib-dev && \
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_EXE_LINKER_FLAGS='-static -lasound' && \
            cmake --build build --config Release
          "

      - name: Set outputs
        id: set_outputs
        run: |
          echo "os=${{ matrix.os }}" >> $GITHUB_ENV
          echo "build_type=${{ matrix.build_type }}" >> $GITHUB_ENV

  upload:
    name: Upload Build Artifacts
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after the build job
    steps:
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: Synth_Dexed-${{ env.os }}${{ env.build_type != '' && format('-{0}', env.build_type) || '' }}
          path: |
            build/bin/Release/*
            build/bin/*
