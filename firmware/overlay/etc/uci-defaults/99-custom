uci -q batch <<\EOI
service dropbear enable

# Speed up boot and enable i2c
echo "initial_turbo 30" >> /boot/config.txt
echo "dtparam=i2c1=on" >> /boot/config.txt
echo "overlay=wm8960-soundcard" >> /boot/config.txt

# Silence boot
echo " quiet splash" >> /boot/cmdline.txt
sed -i -e 's|console=tty1|console=tty99|g' /boot/cmdline.txt

# Reduce branding
echo "" > /etc/banner

# Install FMRack
wget -c "https://github.com/probonopd/Synth_Dexed/releases/download/continuous/FMRack-linux-static-arm64" -O /usr/bin/FMRack
chmod +x /usr/bin/FMRack

cat > /etc/init.d/FMRack <<\EOF
#!/bin/sh /etc/rc.common
# FMRack service for OpenWRT
START=100  # Start at the end of the boot process
STOP=10   # Stop before the system shutdown
# Define the command to start FMRack
START_CMD="/bin/nice -n -20 FMRack --performance /usr/share/FMRack/001_Seed/000062_SawPressive.ini"
start() {
    echo "Starting FMRack..."
    sleep 2
    $START_CMD 2>&1 >/tmp/log/FMRack.log &
}
stop() {
    echo "Stopping FMRack..."
    killall FMRack
}
EOF
chmod +x /etc/init.d/FMRack
/etc/init.d/FMRack enable

# Fix for it to start working without replugging devices
cat > /etc/rc.local <<\EOF
# Put your custom commands here that should be executed once
# the system init finished.
service FMRack restart
exit 0
EOF

# Hotplug FMRack
mkdir -p /etc/hotplug.d/usb
cat > /etc/hotplug.d/usb/99-fmrack <<\EOF
#!/bin/sh
if [ "${ACTION}" = "add" ] && [ "${DEVTYPE}" = "usb_device" ]; then
    logger -t hotplug "USB device plugged in, restarting FMRack"
    /etc/init.d/FMRack restart
fi
EOF

# Install performances
wget "https://github.com/Banana71/Soundplantage/archive/refs/heads/main.zip"
unzip main
mv Soundplantage-main/performance /usr/share/FMRack
rm -rf Soundplantage-main/ main

# Set hostname
uci set uhttpd.defaults.commonname='FMRack'
uci set system.@system[0].hostname='FMRack'
uci set wireless.@wifi-iface[0].ssid='FMRack'
uci commit

# Create SSH service file
cat > /etc/avahi/services/ssh.service <<EOF
<service-group>
  <name replace-wildcards="yes">%h SSH</name>
  <service>
    <type>_ssh._tcp</type>
    <port>22</port>
    <txt-record>path=/</txt-record>
  </service>
</service-group>
EOF

# Create SFTP service file
cat > /etc/avahi/services/sftp.service <<EOF
<service-group>
  <name replace-wildcards="yes">%h SFTP</name>
  <service>
    <type>_sftp-ssh._tcp</type>
    <port>22</port>
    <txt-record>path=/</txt-record>
  </service>
</service-group>
EOF

# Log to the HDMI console; since we are using tail this does not affect sound
cat > /etc/inittab <<\EOF
::sysinit:/etc/init.d/rcS S boot
::shutdown:/etc/init.d/rcS K shutdown
::askconsole:/usr/libexec/login.sh
#tty1::askfirst:/usr/libexec/login.sh
tty1::askfirst:/usr/bin/tail -f /tmp/log/FMRack.log
EOF

# Announce rtpmidid

cat > /etc/init.d/rtpmidid <<\EOF
#!/bin/sh /etc/rc.common
USE_PROCD=1
START=99
STOP=15
start_service() {
        [ -d /var/run/rtpmidid ] || mkdir -m 0755 -p /var/run/rtpmidid
        procd_open_instance
        procd_set_param command /usr/bin/rtpmidid --ini /etc/rtpmidid.ini
        procd_set_param stdout 1
        procd_set_param stderr 1
        procd_set_param respawn
        procd_close_instance
}
EOF

cat > /etc/rtpmidid.ini <<\EOF
[general]
alsa_name=rtpmidid
## All announce sections and connect_to can appear several times.
# RTPMIDI announcement requires a firewall rule to allow incoming
# connections on port 5004. If you want to not have an rtpmidi_announce
# section, comment it out or delete it.
# This creates an announced rtpmidi endpoint, and any connection
# will create a new ALSA port.
[rtpmidi_announce]
name={{hostname}}
port=5004
# Alsa announcement requires no firewall as it creates random
# ports for each connection. If you want to not have an alsa_announce
# section, comment it out or delete it.
[alsa_announce]
# Name for the ALSA connection so that when a conneciton is made, an rtpmidi
# is announced.
name=Network Export
# and now some fixed connections
# [connect_to]
# hostname=192.168.1.33
# port=5004
# name=DeepMind12D
# [connect_to]
# hostname=192.168.1.210
# # default port is 5004
# name=midid
EOF
EOI
